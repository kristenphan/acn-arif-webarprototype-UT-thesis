AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Deploy the backend services of WebAR prototype using SAM template.yaml
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  ##########################################################################
  #   DynamoDB                                                            #
  ##########################################################################
  SensorDataDDB:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: sensorId
          AttributeType: N
        - AttributeName: timeEpoch
          AttributeType: N
      KeySchema:
        - AttributeName: sensorId
          KeyType: HASH
        - AttributeName: timeEpoch
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      TableName: webar-ddb-sensordata2
      Tags: 
        - Key: project
          Value: webar
          
  ##########################################################################
  #   Lambda Function                                                      #
  ##########################################################################
  SensorDataSelectFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: webar-lambda-sensordataselect/
      Handler: app.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      FunctionName: webar-lambda-sensordataselect2
      Tags:
        project: webar
      Environment:
        Variables:
          TABLE_NAME: !Ref SensorDataDDB
      Role: arn:aws:iam::268357442233:role/service-role/webar-lambda-sensordataselect-role-zs2avpze
      FunctionUrlConfig:
        AuthType: NONE
        Cors: 
            AllowMethods: 
              - POST
            AllowHeaders:
              - content-type
            AllowOrigins: 
              - https://d287cl5btunnv2.cloudfront.net
  WaterMeSelectFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: webar-lambda-watermeselect/
      Handler: app.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      FunctionName: webar-lambda-watermeselect2
      Tags:
        project: webar
      Role: arn:aws:iam::268357442233:role/service-role/webar-lambda-watermeselect-role-lr682h8c
      FunctionUrlConfig:
        AuthType: NONE
        Cors: 
            AllowMethods: 
              - POST
            AllowHeaders:
              - content-type
            AllowOrigins: 
              - https://d287cl5btunnv2.cloudfront.net
  WaterMeInsertFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: webar-lambda-watermeinsert/
      Handler: app.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      FunctionName: webar-lambda-watermeinsert2
      Tags:
        project: webar
      Role: arn:aws:iam::268357442233:role/service-role/webar-lambda-watermeinsert-role-01ns09dc
      FunctionUrlConfig:
        AuthType: NONE
        Cors: 
            AllowMethods: 
              - POST
            AllowHeaders:
              - content-type
            AllowOrigins: 
              - https://d287cl5btunnv2.cloudfront.net
Outputs:
  SensorDataSelectFunction:
    Description: "Query sensor data from ddb"
    Value: !GetAtt SensorDataSelectFunction.Arn
  WaterMeSelectFunction:
    Description: "Query watering history from ddb"
    Value: !GetAtt WaterMeSelectFunction.Arn
  WaterMeInsertFunction:
    Description: "Write watering record to ddb"
    Value: !GetAtt WaterMeInsertFunction.Arn
  SensorDataDDB:
    Description: "Dynamodb table storing sensor data"
    Value: !GetAtt SensorDataDDB.Arn